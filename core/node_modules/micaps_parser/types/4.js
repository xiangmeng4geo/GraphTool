var idw = require('../interpolate/idw');

exports.parse = function(lines, options){
	var REG_TITLE = /^((-?[\d.]+)(\s+|$)){19}/,
		REG_BLANK = /\s+/;

	var lineExtra = options.lineExtra;
	var lineTitle = lineExtra[1].trim();
	if(REG_TITLE.test(lineTitle)){
		var arr = lineTitle.split(REG_BLANK);
		var space_lng = parseFloat(arr[6]),
			space_lat = parseFloat(arr[7]),
			lng_start = parseFloat(arr[8]),
			lng_end = parseFloat(arr[9]),
			lat_start = parseFloat(arr[10]),
			lat_end = parseFloat(arr[11]),
			num_lng = parseFloat(arr[12]),
			num_lat = parseFloat(arr[13]);

		var china_start_lng = 70,
			china_start_lat = 12,
			china_end_lng = 140,
			china_end_lat = 55;
				
		var data = [];
		var vals = lines.join('\s').trim().split(REG_BLANK);
		for(var i = 0; i<num_lat; i++){
			var items = [];
			for(var j = 0; j<num_lng; j++){
				var x = lng_start + space_lng * j,
					y = lat_start + space_lat * i;
				var val = parseFloat(vals.shift());
				if(x >= china_start_lng && x <= china_end_lng && y >= china_start_lat && y <= china_end_lat){
					items.push({
						x: x,
						y: y,
						v: val
					});
				}
			}
			if(items.length > 0){
				data.push(items);
			}	
		}

		// console.log(1);
		// var data_test = [];
		// for(var i = 0, j = data.length; i<j; i++){
		// 	data_test = data_test.concat(data[i]);
		// }
		// var default_option = {
		// 	x0: 72.5,
		// 	y0: 17.5,
		// 	x1: 137,
		// 	y1: 55,
		// 	grid_space: 0.2,
		// 	numOfNearest: 3,
		// 	default_val: 999999,
		// 	interpolation_all: false,
		// 	num_of_cols: 5,
		// 	val_col: 5,
		// 	arithmetic: null
		// }
		// // console.log(data_test, data);
		// var lnglat_arr = idw.genLngLatArr(default_option.x0, default_option.y0, default_option.x1, default_option.y1, default_option.grid_space);
		// var new_data = idw.interpolate(data_test, lnglat_arr, default_option.numOfNearest, default_option.default_val, default_option.interpolation_all);
		
		// 对格点上的数据值进行格式化，减小文件体积
		// for(var i = 0, j = new_data.length; i < j; i++){
		// 	var items = new_data[i];
		// 	for(var y = 0, y_len = items.length; y < y_len; y++){
		// 		items[y].v = parseFloat(digit_util.toFixed(items[y].v));
		// 	}
		// }
		return {
			interpolate: data
		};
	}
}