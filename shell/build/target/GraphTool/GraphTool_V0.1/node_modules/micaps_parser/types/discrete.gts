function _parse_file(a,e){e||(e={});var r={x0:73.5,y0:18.16,x1:139,y1:54,grid_space:.5,numOfNearest:5,default_val:DEFAULT_VALUE,interpolation_all:!1,num_of_cols:5,val_col:5};for(var t in r)void 0===e[t]&&(e[t]=r[t]);var i=e.default_val,l=e.val_col-1,s=e.num_of_cols-3,o=new RegExp("^\\d+\\s+[\\d.]+\\s+[\\d.]+(\\s+[-\\d.]+){"+s+"}$"),_=[];a.forEach(function(a){if(a=a.trim(),o.test(a)){var e=a.split(/\s+/),r=e[l];isNaN(r)||r==i||_.push({x:parseFloat(e[1]),y:parseFloat(e[2]),v:parseFloat(r)})}});for(var d=idw.genLngLatArr(e.x0,e.y0,e.x1,e.y1,e.grid_space),n=idw.interpolate(_,d,e.numOfNearest,e.default_val,e.interpolation_all),t=0,p=n.length;p>t;t++)for(var f=n[t],u=0,v=f.length;v>u;u++)f[u].v=parseFloat(digit_util.toFixed(f[u].v));return{interpolate:n}}var idw=require("../interpolate/idw"),digit_util=require("../utils").Digit,DEFAULT_VALUE=999999,DEFAULT_COLOR="rgba(0,0,0,0)",REG_DATA_NUM=/^\d+\s+(\d+)$/,REG_DATA=/^(\d+)\s+([\d.]+)\s+([\d.]+)\s+([\d.]+)\s+(-?[\d.]+)$/;exports.parse=_parse_file;